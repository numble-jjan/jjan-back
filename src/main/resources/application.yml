spring:
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        format_sql: true

  #  datasource:
  #    hikari:
  #      jdbc-url: jdbc:h2:mem:testdb;MODE=MYSQL
  #  h2:
  #    console:
  #      enabled: true

  datasource:
    url: jdbc:mysql://localhost:3306/numble?useSSL=false&serverTimezone=Asia/Seoul
    username: root
    password: pass
    driver-class-name: com.mysql.cj.jdbc.Driver

  profiles:
    include: oauth

#  security:
#    oauth2:
#      client:
#        registration:
#          google: # /oauth2/authorization/google ? ??? ???? ??.
#            client-id: ENC(XE7JHh0ZYQD30jKoxwvx1S8r3clu3xZ9bqfMNGl/m/tRXW7T9SOOaCKxEHZLkS/qzqLCq8Gq8yChejcgtmgXtd2jKqzMxXL7p1m18378FapDbUwk0S71kg==)
#            client-secret: ENC(3fngNdbEIrK0FLmCDUhzIkVUDWD5vCfQRC+k8SHRWhi5DCCjIh1+0tYGKKC+rs2l)
#            scope:
#              - email
#              - profile

jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator
    password: ${JASYPT_PASSWORD}

mybatis:
  mapper-locations: mapper/**/*.xml

token:
  access_expiration_time: 600000 # 60 * 10 * 1000  = 10분
  refresh_expiration_time: 604800000 # 60 * 60 *  24 * 7 * 1000 = 7일
  secret: thisIsJwtSecretKeyForAccessToApiRequestWithJavascriptWebToken

authorization:
  token:
    header:
      access-name: AccessToken
      refresh-name: RefreshToken
      prefix: Bearer

access:
  header:
    name: Access-Control-Allow-Origin

logs:
  config:
    filePath: /Users/deunsol/Documents/GitHub/jjan-backend/logs
    fileName: jjan